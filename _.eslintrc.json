{
  // Tells ESLint that your config extends the given configurations.
  "extends": [
    // Is ESLint's inbuilt "recommended" config - it turns on a small,
    // sensible set of rules which lint for well-known best-practices.
    "eslint:recommended",
    // Is typescript-eslint "recommended" config - it's similar to eslint:recommended,
    // except it turns on TS-specifiic rules from @typescript-eslint/eslint-plugin.
    "plugin:@typescript-eslint/recommended",
    // From eslint-config-prettier
    "prettier" // prettier needs to be last
  ],
  // Tells ESLint to use the @typescript-eslint/parser package to parse your source files.
  // This is required, or else ESLint will throw errors as it tries to parse TS code as if
  // it were regular JavaScript.
  "parser": "@typescript-eslint/parser",
  // Tells ESLint to load the @typescript-eslint/eslint-plugin package as a plugin.
  // This allows you to use typescript-eslint's rules within your codebase.
  "plugins": ["@typescript-eslint", "simple-import-sort"],
  // Is generally good ESLint practice to indicate this file is the root-level one used by the
  // project and ESLint should not search beyond this directory for config files.
  "root": true,
  "rules": {
    "quotes": "off",
    "@typescript-eslint/quotes": ["error", "double"],
    "semi": "off",
    "@typescript-eslint/semi": ["error", "always"],
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/method-signature-style": "error",
    "eol-last": ["error", "always"],
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": "error",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error"
  }
}
